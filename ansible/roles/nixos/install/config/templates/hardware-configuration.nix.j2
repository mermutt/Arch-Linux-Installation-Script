{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "ahci" "xhci_pci" "usbhid" "usb_storage" "sd_mod" "sdhci_pci" "aesni_intel" "cryptd" ];
  boot.initrd.kernelModules = [ ];
{% if has_intel_cpu %}
  boot.kernelModules = [ "kvm-intel" ];
{% elif has_amd_cpu %}
  boot.kernelModules = [ "kvm-amd" ];
{% endif %}
  boot.extraModulePackages = [ ];
  boot.loader.efi.canTouchEfiVariables = true;
  boot.loader.efi.efiSysMountPoint = "/boot/efi";
  boot.loader.grub = {
    enable = true;
    version = 2;
    device = "nodev";
    efiSupport = true;
    enableCryptodisk = true;
  };

  boot.initrd = {
    luks.devices.{{ crypt_dev_label }} = {
        device = "/dev/disk/by-partlabel/{{ part_label_root }}";
        preLVM = true;
        keyFile = "{{ luks_keyfile }}";
        allowDiscards = true;
    };
    secrets = {
        "{{ luks_keyfile[1:] }}" = "/etc/secrets/initrd{{ luks_keyfile }}";
    };
  };

  fileSystems."/" =
    { device = "/dev/mapper/{{ crypt_dev_label }}";
      fsType = "btrfs";
      options = [ "subvol=@" "compress=zstd" "noatime" ];
    };

  fileSystems."/home" =
    { device = "/dev/mapper/{{ crypt_dev_label }}";
      fsType = "btrfs";
      options = [ "subvol=@home" "compress=zstd" "noatime" ];
    };

  fileSystems."/nix" =
    { device = "/dev/mapper/{{ crypt_dev_label }}";
      fsType = "btrfs";
      options = [ "subvol=@nix" "compress=zstd" "noatime" ];
    };

  fileSystems."/var/log" =
    { device = "/dev/mapper/{{ crypt_dev_label }}";
      fsType = "btrfs";
      options = [ "subvol=@log" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-partlabel/{{ part_label_boot }}";
      fsType = "vfat";
    };

  swapDevices = [ ];

  networking.useDHCP = lib.mkDefault true;

{% if has_intel_cpu %}
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
{% elif has_amd_cpu %}
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
{% endif %}
}
