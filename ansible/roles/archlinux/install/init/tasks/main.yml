---

- block:

  - name: "Set fact enable_encryption"
    set_fact:
      enable_encryption: "{{ luks_passphrase | length > 0 }}"

  - name: "Show enable_encryption fact"
    debug:
      var: enable_encryption


- block:
  # root

  - name: "Create {{ ansible_remote_tmp }} on host"
    file:
      path: "{{ ansible_remote_tmp }}"
      state: 'directory'
      mode: 0777

  - name: "Update pacman cache"
    community.general.pacman:
      update_cache: yes

  - name: 'Update install medium archlinux-keyring'
    pacman:
      name: 'archlinux-keyring'
      state: latest
      update_cache: yes

  - name: 'Install cryptsetup'
    package:
      name:
        - cryptsetup
      state: latest

  - name: "swapoff -a"
    command:
      cmd: "swapoff -a"

  become: true
  when: ansible_facts['distribution'] != "NixOS"


- block:
  # root

  - name: "Get previous install mounts"
    shell:
      cmd: mount | grep -E "(btrfs|{{ install_path }})" | awk '{print $3}' | awk '{ print length(), $0 | "sort -n -r" }' | awk '{print $2}' | grep -v '^/$'
    register: mounts
    failed_when: false

  - name: "Show already mounted partitions"
    debug:
      msg: "{{ mounts.stdout_lines }}"

  - name: "Ensure partitions are not mounted"
    include_tasks: unmount.yml
    with_items:
      - "{{ mounts.stdout_lines }}"

  - name: "Get luks containers"
    shell:
      cmd: ls /dev/mapper | grep -v control
    register: luks_containers
    failed_when: false

  - name: "Show open luks containers"
    debug:
      msg: "{{ luks_containers.stdout_lines }}"

  - name: "Close existing LUKS containers"
    shell:
      cmd: "cryptsetup close {{ item }}"
    with_items:
      - "{{ luks_containers.stdout_lines }}"

  become: true
